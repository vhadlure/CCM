@model Clinic.Models.PatientModel.PatientModel

<div class="box-header with-border">
    <h3 class="box-title">Add Patient</h3>
</div>

<form class="form-horizontal" id="PatientFormID" action="/patient/SavePatientDetails" method="post">
    @Html.HiddenFor(model => model.PatientID)
    <div class="box-body">
        <div class="form-group">
            <label for="" class="col-sm-2 control-label">First Name<span class="red"> *</span></label>
            <div class="col-sm-3">
                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control ", placeholder = "First Name" })
            </div>
            <label for="" class="col-sm-2 control-label">Middle Name</label>
            <div class="col-sm-3">
                @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control ", placeholder = "Middle Name" })
            </div>
        </div>
        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Last Name<span class="red"> *</span></label>
            <div class="col-sm-3">
                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control ", placeholder = "Last Name" })
            </div>
            <label for="" class="col-sm-2 control-label">Gender</label>
            <div class="col-sm-3">
                @{ Html.RenderAction("GenderDDL", "common"); }
                @Html.HiddenFor(Model => Model.Gender)
            </div>
        </div>
        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Date of Birth<span class="red"> *</span></label>
            <div class="col-sm-3">
                @Html.TextBoxFor(model => model.DOB, new { @class = "form-control", placeholder = "dd/MM/yyyy" })
                @Html.HiddenFor(Model => Model.DOBStr)
            </div>
            <label for="" class="col-sm-2 control-label">Mobile Number<span class="red"> *</span></label>
            <div class="col-sm-3">
                @Html.TextBoxFor(model => model.MobileNumber, new { @class = "form-control onlyNumber", placeholder = "Mobile Number" })
            </div>
        </div>
        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Address</label>
            <div class="col-sm-3">
                @Html.TextAreaFor(model => model.Address, new { @class = "form-control", placeholder = "Address Line 1" })
            </div>
            <label for="" class="col-sm-2 control-label">City</label>
            <div class="col-sm-3">
                @{ Html.RenderAction("CityDDL", "common"); }
                @Html.HiddenFor(Model => Model.CityName)
            </div>
        </div>
        <div class="form-group">
            <label for="" class="col-sm-2 control-label">State</label>
            <div class="col-sm-3">
                @{ Html.RenderAction("StateDDL", "common"); }
                @Html.HiddenFor(Model => Model.StateName)
            </div>
            <label for="" class="col-sm-2 control-label">Country</label>
            <div class="col-sm-3">
                @{ Html.RenderAction("CountryDDL", "common"); }
                @Html.HiddenFor(Model => Model.CountryName)
            </div>
        </div>
        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Pin Code</label>
            <div class="col-sm-3">
                @Html.TextBoxFor(model => model.Pincode, new { @class = "form-control onlyNumber", placeholder = "Pin Code" })
            </div>
            <label for="" class="col-sm-2 control-label">Blood Group</label>
            <div class="col-sm-3">
                @{ Html.RenderAction("BloodGroupDDL", "common"); }
                @Html.HiddenFor(Model => Model.BloodGroup)
            </div>
        </div>
        <div class="form-group">
            <label for="" class="col-sm-2 control-label">Clinic</label>
            <div class="col-sm-3">
                @{ Html.RenderAction("ClinicDDL", "common"); }
                @Html.HiddenFor(Model => Model.ClinicName)
            </div>
            <label for="" class="col-sm-2 control-label">Doctor<span class="red"> *</span></label>
            <div class="col-sm-3">
                @Html.TextBoxFor(model => model.DoctorsName, new { @class = "form-control ", placeholder = "Doctors Name" })
            </div>

        </div>
    </div>
    <!-- /.box-body -->
    <div class="box-footer">
        <div class="pull-right">
            <button type="button" class="btn btn-success" onclick="SavePatientDetails();">Save</button>
            <button type="button" class="btn btn-primary btn-flat" onclick="ResetPatientDetails();">Reset</button>
        </div>
    </div>
    <!-- /.box-footer -->
</form>
<script src="~/Scripts/js/jquery-1.11.0.min.js"></script>
<script src="~/Scripts/Validation/validation.js"></script>
<script src="~/Scripts/utility/error.js"></script>
<script src="~/Scripts/utility/common.js"></script>
<script src="~/plugins/notification/notify.js"></script>
<script src="~/plugins/jQueryUI/jquery-ui.min.js"></script>
<script src="~/Scripts/tag-it/tag-it.min.js"></script>
<link href="~/Content/css/Tag-it/tagit.ui-zendesk.css" rel="stylesheet" />
<link href="~/Content/css/Tag-it/jquery.tagit.css" rel="stylesheet" />
<script type="text/javascript">
    $(document).ready(function () {
        applyTriggerNotify();
        $('#DoctorsName').tagit({
            singleField: true,
        });

        $("#DOB").val($("#DOBStr").val());

        if ($("#PatientID").val() != null && $("#PatientID").val() != "" && $("#PatientID").val() != "0") {
            $("#UserHeader").text("Edit User Details");
        }
        else {
            $("#UserHeader").text("New User");
        }
        if ($("#StateName").val() != null && $("#StateName").val() != "") {
            $("#StateAutocomplete").val($("#StateName").val());
        }
        if ($("#CountryName").val() != null && $("#CountryName").val() != "") {
            $("#CountryAutocomplete").val($("#CountryName").val());
        }
        if ($("#CityName").val() != null && $("#CityName").val() != "") {
            $("#CityAutocomplete").val($("#CityName").val());
        }
        if ($("#ClinicName").val() != null && $("#ClinicName").val() !== "") {
            $("#ClinicAutocomplete").val($("#ClinicName").val());
        }
        if ($("#Gender").val() != null && $("#Gender").val() != "") {
            $("#GenderDDL").val($("#Gender").val());
        }
        if ($("#BloodGroup").val() != null && $("#BloodGroup").val() != "") {
            $("#BloodGroupDDL").val($("#BloodGroupDDL").val());
        }
    });

    $('#DOB').datepicker({
        dateFormat: 'dd/mm/yy',
        autoclose: true
    });

    $("#PatientFormID").submit(function (e) {
        showLoader();
        $("#DOBStr").val($("#DOB").val());
        $("#StateName").val($("#StateAutocomplete").val());
        $("#CountryName").val($("#CountryAutocomplete").val());
        $("#CityName").val($("#CityAutocomplete").val());
        $("#Gender").val($("#GenderDDL").val());
        $("#BloodGroup").val($("#BloodGroupDDL").val());
        $("#ClinicName").val($("#ClinicAutocomplete").val());

        var postData = $(this).serializeArray();
        var formURL = $(this).attr("action");
        $.ajax(
        {
            url: formURL,
            type: "POST",
            data: postData,
            success: function (message, textStatus, jqXHR) {
                hideLoader();
                //moduleMappingGrid.reload();
                $(':input').not(':button, :submit, :reset, select').val('');
                $.notify("Patient details saved successfully", "success");
                window.location.href = "/Patient/Index";
                //$("#userRegistrationFormModal").modal("hide");
                //userGrid.reload();
            },
            error: function (jqXHR, textStatus, errorThrown) {
            }
        });
        e.preventDefault(); //STOP default action
        //e.unbind(); //unbind. to stop multiple form submit.
    });

    function SavePatientDetails() {
        //if (patientRegistrationValidation()) {
        $("#PatientFormID").submit();
        //}
    }
    function ResetUserDetails() {
        $(':input').not(':button, :submit, :reset, :select').val('');
        $('select').val("0");
    }
    function OnGenderChange() {
        $("#GenderID").val($("#GenderDDL").val());
    }

    function OnBloodGroupChange() {
        $("#BloodGroup").val($("#BloodGroupDDL").val());
    }
</script>
<style type="text/css">
    ul.ui-autocomplete {
        z-index: 1100 !important;
    }
</style>